//Originally from RP-1 v1.5 
//https://github.com/KSP-RO/RP-0
//Used under Creative Commons License

CONTRACT_TYPE:NEEDS[LRTRContracts]
{
    name = recordCrewedAlt
	group = HumanRecords
	
    title = Crewed Altitude Record of @crewedTargetAltitudeKM km.
    description = We want you to set a new crewed altitude record! Fly/rocket above @crewedTargetAltitudeKM km with crew aboard.
	genericTitle = Crewed Altitude Record
    genericDescription = We want you to set a new crewed altitude record! Fly/rocket above the specified altitude with crew aboard.
    synopsis = Set a crewed altitude record of @crewedTargetAltitudeKM km.
    completedMessage = Congratulations! You've set a new crewed altitude record!
	
	agent = Federation Aeronautique Internationale

    autoAccept = true
	cancellable = true
	declinable = false
	
	prestige = Trivial

    targetBody = HomeWorld()

    // Can only have one active
    maxSimultaneous = 1

    // Contract rewards
    rewardFunds = Round((Pow(@crewedTargetAltitudeKM, 0.4) * 1000 - 800) * @LRTR:globalHardContractMultiplier, 100)
	rewardReputation = 5.0 + @crewedTargetAltitude*0.0001
	DATA
	{
		type = float
		altMulti = LRTRKarmanLine()/100000
		hidden = true
	}
    DATA
    {
        type = List<float>
		hidden = true
        crewedAlts = [ Round(5000 * @/altMulti, 1000), Round(10000 * @/altMulti, 1000), Round(15000 * @/altMulti, 1000), Round(20000 * @/altMulti, 1000), Round(25000 * @/altMulti, 1000), Round(30000 * @/altMulti, 1000), Round(40000 * @/altMulti, 1000), Round(50000 * @/altMulti, 1000), Round(60000 * @/altMulti, 1000), Round(70000 * @/altMulti, 1000), Round(80000 * @/altMulti, 1000), Round(90000 * @/altMulti, 1000), Round(100000 * @/altMulti, 1000), Round(120000 * @/altMulti, 1000), Round(140000 * @/altMulti, 1000), Round(160000 * @/altMulti, 1000), Round(180000 * @/altMulti, 1000), Round(200000 * @/altMulti, 1000), Round(500000 * @/altMulti, 1000), Round(1000000 * @/altMulti, 1000) ]
    }

    // Break this into two steps to work around ContractConfigurator#260
    DATA
    {
        type = float

        crewedAltIndex = LRTR_CrewedAltitudeIndex
    }

    DATA
    {
        type = float

        crewedTargetAltitude = @crewedAlts.ElementAt(@crewedAltIndex)
    }
	DATA
    {
        type = float

        crewedTargetAltitudeKM = @crewedTargetAltitude * 0.001
    }

    PARAMETER
    {
        name = ReachState
        type = ReachState

        minAltitude = @/crewedTargetAltitude
    }
	PARAMETER
	{
		name = HasCrew
		type = HasCrew
		minCrew = 1
	}

    BEHAVIOUR
    {
        name = IncrementIndex
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            LRTR_CrewedAltitudeIndex = LRTR_CrewedAltitudeIndex + 1
        }
    }

    REQUIREMENT
    {
        title = Crewed Altitude
        type = Expression

        expression = @/crewedAltIndex < @/crewedAlts.Count()
    }
}
