//Originally from RP-1 v1.8 
//https://github.com/KSP-RO/RP-0
//Used under Creative Commons License

CONTRACT_TYPE:NEEDS[LRTRContracts]
{
	name = orbitCeres
	title = Ceres Orbit
	group = Orbits
	agent = Grand Tours

	description = Design and successfully launch an uncrewed probe that will enter into an orbit of Ceres.

	synopsis = Send an uncrewed probe into orbit around Ceres

	completedMessage = Congratulations! We can continue to gather data from the new satellite.

	sortKey = 1008

	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 1
	maxSimultaneous = 1
	deadline = 5 * LRTRDaysPerYear() * LRTRDeadlineMult()  // 5 years

	targetBody = Ceres



	prestige = Significant   // 1.25x
	advanceFunds = 0.2 * 15000 * @LRTR:globalHardContractMultiplier
	rewardScience = 0.15
	rewardReputation = 30
	rewardFunds = @advanceFunds * 4
	failureReputation = 40
	failureFunds = @advanceFunds * 0.5

	// ************ REQUIREMENTS ************

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = flybyCeres
	}

	// ************ DATA ************
	DATA
	{
		type = double
		orbitKM = Round((@targetBody.Radius() * 2) / 1000)
		title = Get Minimum Orbit Height
	}

	// ************ PARAMETERS ************

	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Orbit Ceres
		define = OrbitCeres

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = EnterOrbit
			type = Orbit
			situation = ORBITING
			maxPeA = @targetBody.Radius() * 2
			disableOnStateChange = true
			title = Orbit Ceres with a maximum Periapsis of @/orbitKM km
			
			PARAMETER
			{
				name = Duration
				type = Duration

				duration = 2m

				preWaitText = Check for Stable Orbit
				waitingText = Checking for Stable Orbit
				completionText = Stable Orbit: Confirmed
			}
		}
	}
}
