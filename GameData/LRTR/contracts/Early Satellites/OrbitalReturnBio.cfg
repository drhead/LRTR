//Originally from RP-1 v1.1.2 
//https://github.com/KSP-RO/RP-0
//Used under Creative Commons License

CONTRACT_TYPE:NEEDS[LRTRContracts] 
{
	name = OrbitalReturnBio
	group = EarlySatellites
	
	title = Early Orbital Biological Experimentation
	genericTitle = Early Orbital Biological Experimentation
	description = Launching small mammals will prepare us for the monumental task of putting an astronaut into orbit. Place a large biological canister into orbit for at least 1.5 hours, then recover the experiment. <br>This is a series of 2 contracts, of which $OrbitalBio_Count have been completed.<br> <color=red><b>Completing the first crewed orbital contract will automatically cancel this contract!</b></color>.
	genericDescription = Put a large biological experiment into orbit and recover the experiment and payload safely.
	synopsis = Launch, maintain orbit for at leas 1.5 hours, and recover a large biological canister.
	completedMessage = Well done! Our scientists are now studying the sample to see the effects of the journey.

	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 2
	maxSimultaneous = 1
	deadline = LRTRDaysPerYear() * LRTRDeadlineMult() //1 year
	
	targetBody = HomeWorld()

	// Contract rewards
	prestige = Significant
	advanceFunds = 30000 * @LRTR:globalHardContractMultiplier
	rewardFunds = @/reward * @LRTR:globalHardContractMultiplier
	rewardReputation = 10
	failureFunds = @advanceFunds * 0.5

	REQUIREMENT 
	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_OrbitRecover
	}
			
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_OrbitCrewed
		title = Have not completed @contractType Contract
		invertRequirement = true
	}

    REQUIREMENT
    {
        name = PartUnlocked
        type = PartUnlocked
        part = ScienceBox
    }

	DATA 
	{
		type = List<int>
		rewards = [20000, 10000 ]
	}
		
	DATA 
	{
		type = int
		index = $OribtalBio_Count
		reward = @rewards.ElementAt($OrbitalBio_Count)
	}
	
	DATA 
	{
		type = float
		minPeA = Round(@/targetBody.AtmosphereAltitude() + 5000, 10000)
	}

	BEHAVIOUR 
	{
		name = IncrementTheCount
		type = Expression
		CONTRACT_OFFERED
		{
			OrbitalBio_Count = $OrbitalBio_Count + 0
		}
		CONTRACT_COMPLETED_SUCCESS
		{
			OrbitalBio_Count = $OrbitalBio_Count + 1
		}
	}

	PARAMETER 
	{
		name = MissionParameters
		type = VesselParameterGroup
		title = Reach orbit with a large biological sample, maintain orbit for at least 1.5 hours, and then recover that sample.

		PARAMETER 
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}

		PARAMETER 
		{
			name = HasBiologicalSample
			type = PartValidation
			part = ScienceBox
			title = Include a large biological experiment on the craft
			hideChildren = true
		}

		PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = HomeWorld()
			disableOnStateChange = true
			minPeA = @/minPeA

			PARAMETER
			{
				name = Duration
				type = Duration
				duration = 1h 30m
				preWaitText = Reach specified orbit.
				waitingText = Completing orbit...
				completionText = Orbit completed, you may fire retros when ready.
			}
		}

	}

	PARAMETER 
	{
		name = ReturnHome
		type = ReturnHome
		targetBody = HomeWorld()
		title = Return home safely
		hideChildren = true
	}
}
	
