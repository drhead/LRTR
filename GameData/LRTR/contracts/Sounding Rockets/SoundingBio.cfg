//Originally from RP-1 v1.5 
//https://github.com/KSP-RO/RP-0
//Used under Creative Commons License

CONTRACT_TYPE:NEEDS[LRTRContracts]
{
	name = SoundingRocketBio
	group = SoundingRockets
	
	title = Low Space Biological Experimentation
	genericTitle = Low Space Biological Experimentation
	description = Launching small mammals will prepare us for the monumental task of putting an astronaut into space. Carry a small biological experiment above the Karman line, then recover the experiment. <br>This is a series of 3 contracts, of which $SoundingBio_Count have been completed.
	genericDescription = Put a biological experiment and a new scientific payload above the Karman Line and recover the experiment safely.
	synopsis = Launch and recover a biological capsule from over @/altitudeKm km
	completedMessage = Well done! Our scientists are now studying the sample to see the effects of the journey.

	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 3
	maxSimultaneous = 1
	deadline = LRTRDaysPerYear() * LRTRDeadlineMult()
	
	targetBody = HomeWorld()

	// Contract rewards
	prestige = Trivial
	advanceFunds = 2250 * @LRTR:globalHardContractMultiplier
	rewardScience = 0
	rewardFunds = @/reward * @LRTR:globalHardContractMultiplier
	rewardReputation = 5
	failureFunds = @advanceFunds * 0.5

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = SuborbitalReturn
	}

	REQUIREMENT
	{
		name = CompleteOrbit
		type = CompleteContract
		contractType = first_OrbitUncrewed
		invertRequirement = true
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = SoundingRocketIntermediate
		invertRequirement = true
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = SoundingRocketDifficult
		invertRequirement = true
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = DownrangeDifficult
		invertRequirement = true
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = DownrangeIntermediate
		invertRequirement = true
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = SoundingRocketFilm
		invertRequirement = true
	}

	DATA
	{
		type = float
		noPlaneFundMult = LRTRYesPlanes() ? 1 : @LRTR:noPlaneFundMult
		karmanLine = LRTRKarmanLine()
		karmanLineKM = @karmanLine/1000
		altitudeMulti = @karmanLine/100000
	}

	DATA
	{
		type = List<float>
		altitudesKm = [ Round(100 * @/altitudeMulti, 20), Round(120 * @/altitudeMulti, 20), Round(140 * @/altitudeMulti, 20) ]
		hidden = true
	}

	DATA
	{
		type = List<int>
		rewards = [ 10000, 8000, 6000 ]
	}

	DATA
	{
		type = int
		index = $SoundingBio_Count
	}

	DATA
	{
		type = int
		reward = @rewards.ElementAt($SoundingBio_Count)
	}

	DATA
	{
		type = float
		altitudeKm = @altitudesKm.ElementAt(@index)
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		CONTRACT_OFFERED
		{
			SoundingBio_Count = $SoundingBio_Count + 0
		}
		CONTRACT_COMPLETED_SUCCESS
		{
			SoundingBio_Count = $SoundingBio_Count + 1
		}
	}

	PARAMETER
	{
		name = MissionParameters
		type = VesselParameterGroup
		title = Reach @/altitudeKm km with a biological sample, and then recover that sample.

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}

		PARAMETER
		{
			name = SpaceAltitude
			type = ReachState
			minAltitude = @/altitudeKm * 1000
			disableOnStateChange = true
			title = Reach an altitude of at least @/altitudeKm km
		}
	}
	PARAMETER
	{
		name = HasBiologicalSample
		type = PartValidation
		title = Include a small biological experiment on the craft
		FILTER 
		{
			MODULE
			{
				experimentID = RP0bioScan1
			}
		}
	}
	PARAMETER
	{
		name = ReturnHome
		type = ReturnHome
		targetBody = HomeWorld()
		title = Return home safely
		hideChildren = true
	}
}

@CONTRACT_TYPE[SoundingRocketBio]:NEEDS[LRTRContracts,!LRTRScience]
{
	%description = Launching small mammals will prepare us for the monumental task of putting an astronaut into space. Unfortunately small mammals are difficult to catch, and frankly too darn cute to risk.  Carry a Mystery Goo experiment above the Karman line instead, then recover the experiment. <br>This is a series of 3 contracts, of which $SoundingBio_Count have been completed.

	@PARAMETER[HasBiologicalSample]
	{
		%title = Include a Mystery Goo experiment on the craft (well, it could be biological)
		-FILTER {}
		FILTER 
		{
			MODULE
			{
				experimentID = mysteryGoo
			}
		}
	}
}