//Originally from RP-1 v1.5 
//https://github.com/KSP-RO/RP-0
//Used under Creative Commons License

CONTRACT_TYPE:NEEDS[LRTRContracts]
{
	name = SoundingRocketAdvancedBio
	group = SoundingRockets

	title = Advanced Biological Suborbital Experiment
	genericTitle = Advanced Biological Suborbital Experiment
	description = By training and launching a larger mammal in a capsule with recording instruments, we can test how astronauts might perform tasks under similar conditions.  For instance, whether they'll be able to focus under heavy G-loads, vibration, and noise encountered during launch to and recovery from orbit. <br>Carry an advanced biological capsule on a suborbital trajectory, then recover the experiment. <br>This is a series of 3 contracts, of which $SoundingAdvancedBio_Count have been completed.
	genericDescription = Put an advanced biological capsule on a suborbital trajectory and recover both safely.
	synopsis = Launch a rocket with an advanced biological capsule on a suborbital trajectory and recover them.
	completedMessage = Well done! Our subject survived and our scientists are now examining it and the collected data!

	minExpiry = 0
	maxExpiry = 0
	maxCompletions = 3
	maxSimultaneous = 1
	deadline = LRTRDaysPerYear() * LRTRDeadlineMult()
	
	targetBody = HomeWorld()

	// Contract rewards
	prestige = Trivial
	advanceFunds = 3500 * @LRTR:globalHardContractMultiplier
	rewardScience = 0
	rewardFunds = @/reward * @LRTR:globalHardContractMultiplier
	rewardReputation = 5
	failureFunds = @advanceFunds * 0.5
	
	REQUIREMENT
	{
		name = Any
		type = Any

		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			contractType = SoundingRocketBio
			minCount = 3
			title = Complete 'Low Space Biological Experimentation' contract at least @minCount times
		}

		REQUIREMENT
		{
			name = CompleteOrbit
			type = CompleteContract
			contractType = first_OrbitUncrewed
		}
	}

	REQUIREMENT
	{
		name = TechResearched
		type = TechResearched
		tech = scienceSatellite
	}

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = first_KarmanCrewed
		invertRequirement = true
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = SoundingRocketIntermediate
		invertRequirement = true
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = SoundingRocketDifficult
		invertRequirement = true
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = DownrangeDifficult
		invertRequirement = true
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = DownrangeIntermediate
		invertRequirement = true
	}

	REQUIREMENT
	{
		name = AcceptContract
		type = AcceptContract
		contractType = SoundingRocketFilm
		invertRequirement = true
	}

	DATA
	{
		type = List<float>
		velocitiesMs = [ Round(2000 * @/altitudeMulti, 500), Round(3000 * @/altitudeMulti, 500), Round(4000 * @/altitudeMulti, 500) ]

	}

	DATA
	{
		type = List<int>
		rewards = [ 9000, 9000, 9000 ]
	}

	DATA
	{
		type = int
		index = $SoundingAdvancedBio_Count
	}
	
	DATA
	{
		type = int
		reward = @rewards.ElementAt($SoundingAdvancedBio_Count)
	}

	DATA
	{
		type = float
		altitude = Round(@/targetBody.AtmosphereAltitude(), 1000)
		altitudeKm = @altitude/1000
		altitudeMulti = LRTRKarmanLine()/100000
		hidden = true
	}

	DATA
	{
		type = float
		velocityMs = @velocitiesMs.ElementAt(@index)
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression
		CONTRACT_OFFERED
		{
			SoundingAdvancedBio_Count = $SoundingAdvancedBio_Count + 0
		}
		CONTRACT_COMPLETED_SUCCESS
		{
			SoundingAdvancedBio_Count = $SoundingAdvancedBio_Count + 1
		}
	}

	PARAMETER
	{
		name = MissionParameters
		type = VesselParameterGroup
		title = Reach Orbital Velocity of @/velocityMs m/s with a minimum altitude of @/altitudeKm km with a biological sample, and then recover that sample.

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}

		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}

		PARAMETER
		{
			name = SpaceAltitude
			type = ReachState
			minSpeed = @/velocityMs
			minAltitude = @/altitude
			disableOnStateChange = true
			title = Reach an altitude of at least @/altitudeKm km
		}
	}

	PARAMETER
	{
		name = HasBiologicalSample
		type = PartValidation
		FILTER 
		{
			MODULE
			{
				experimentActionName = Observe Large Bio Sample
			}
		}
		title = Include a large biological experiment on the craft
	}
	
	PARAMETER
	{
		name = ReturnHome
		type = ReturnHome
		targetBody = HomeWorld()
		title = Return home safely
		hideChildren = true
	}
}

@CONTRACT_TYPE[SoundingRocketAdvancedBio]:NEEDS[LRTRContracts,!LRTRTechTree]
{
	@REQUIREMENT[TechResearched]
	{
		%tech = basicScience
	}
}

@CONTRACT_TYPE[SoundingRocketAdvancedBio]:NEEDS[LRTRContracts,LRTRScience,LRTR-Kerbalism]
{
	@PARAMETER[HasBiologicalSample]
	{
		@FILTER
		{
			@MODULE
			{
				%experimentID = RP0bioScan2
				-experimentActionName = DEL
			}
		}
	}
}

@CONTRACT_TYPE[SoundingRocketAdvancedBio]:NEEDS[LRTRContracts,!LRTRScience]
{
	%description = By training and launching a larger mammal in a capsule with recording instruments, we can test how astronauts might perform tasks under similar conditions.  However, larger mammals don't like this and bite. <br>Instead carry a Materials Science experiment on a suborbital trajectory, then recover the experiment.  We can clean up the paperwork later. <br>This is a series of 3 contracts, of which $SoundingAdvancedBio_Count have been completed.

	@PARAMETER[HasBiologicalSample]
	{
		@FILTER
		{
			@MODULE
			{
				%experimentID = mobileMaterialsLab
				-experimentActionName = DEL
			}
		}
		%title = Include a Material Science Study experiment on the craft and fudge the paperwork.
	}
}
