//Originally from RP-1 v1.5 
//https://github.com/KSP-RO/RP-0
//Used under Creative Commons License

CONTRACT_TYPE:NEEDS[LRTRContracts]
{
	name = CrewedSupersonic
	group = X-Planes

	title = X-Planes (Supersonic)

	description = Design, build and fly a crewed jet aircraft to maintain @VesselGroup/HoldSituation/minSpeed m/s in level flight, then return home safely.<br>This is a series of 17 contracts, of which $LRTR_XPSS_Difficulty have been completed.<br>The reward of this contract will slowly increase over time but will be reset to 0 after each completion.<br><b>Current reward is at @rewardFactorPercent % of its nominal value. Elapsed/Expected Days: @elapsedDays / @expectedDays</b>
	genericDescription = Design, build and fly a crewed jet aircraft to maintain a specific speed in level flight, then return home safely.

	synopsis = Fly a crewed jet aircraft to maintain @VesselGroup/HoldSituation/minSpeed m/s in level flight and hold, then return safely.

	completedMessage = Congratulations on a successful flight!

	deadline = LRTRDaysPerYear() * LRTRDeadlineMult()  // 1 year
	cancellable = true
	declinable = true
	autoAccept = false
	minExpiry = 1
	maxExpiry = 1

	targetBody = HomeWorld()

	maxCompletions = 17
	maxSimultaneous = 1
	prestige = Trivial

	// reward block
	advanceFunds = Round((700.0 + 5.0 * @VesselGroup/HoldSituation/minSpeed) * @LRTR:globalHardContractMultiplier * @rewardFactor, 100)
	rewardFunds = Round(@advanceFunds + 1200.0 * @rewardFactor, 100)
	failureFunds = @advanceFunds * 0.5
	rewardReputation = 1
	failureReputation = 1

	DATA
	{
		type = int
		antiGrindCompletion = $XPSS_Completion == 0 ? (UniversalTime() - @expectedDays * (LRTRHoursPerDay() * 3600)) : $XPSS_Completion
	}

	DATA
	{
		type = float
		expectedDays = 120

		elapsedDays = Round((UniversalTime() - @antiGrindCompletion) / (LRTRHoursPerDay() * 3600))
		rewardFactor = Log(Max(@elapsedDays / @expectedDays * 20 - 9, 1), 2) / 3.46
		rewardFactorPercent = Round(@rewardFactor * 100, 1)
	}

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = BreakSoundBarrier
	}

	REQUIREMENT
	{
		name = YesPlanes
		title = X-Plane contracts enabled
		type = Expression
		expression = LRTRYesPlanes()
	}

	BEHAVIOUR
	{
		name = IncrementTheCount
		type = Expression

		CONTRACT_OFFERED
		{
			XPSS_Completion = ($XPSS_Completion + 0) == 0 ? (UniversalTime() - 120 * (LRTRHoursPerDay() * 3600)) : ($XPSS_Completion + 0)
		}
		CONTRACT_COMPLETED_SUCCESS
		{
			LRTR_XPSS_Difficulty = $LRTR_XPSS_Difficulty + 1
			XPSS_Completion = UniversalTime()
		}
	}

	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Maintain between @HoldSituation/minSpeed m/s and @HoldSituation/maxSpeed m/s in level flight with a crewed jet aircraft.
		define = supersonicCraft

		PARAMETER
		{
			name = Has Crew
			type = HasCrew
			minCrew = 1
			maxCrew = 99
			title = Have at least 1 crewmember on board
			hideChildren = true
		}

		PARAMETER
		{
			name = NoRocket
			type = PartValidation
			title = Vessel is a jet (no rocket engines allowed)
			hideChildren = true
			FILTER
			{
				partModule = ModuleResourceIntake
			}
		}
		
		PARAMETER
		{
			name = HoldSituation
			type = ReachState
			minSpeed = $LRTR_XPSS_Difficulty <= 9 ? ($LRTR_XPSS_Difficulty * 50 + 350) : ($LRTR_XPSS_Difficulty * 100 - 100)
			maxSpeed = $LRTR_XPSS_Difficulty <= 9 ? ($LRTR_XPSS_Difficulty * 50 + 400) : ($LRTR_XPSS_Difficulty * 100)
			minRateOfClimb = -10
			maxRateOfClimb = 10
			situation = FLYING
			
			title = Hold between @minSpeed m/s to @maxSpeed m/s in level flight.
			
			disableOnStateChange = true
			
			PARAMETER
			{
				name = Duration
				type = Duration
				duration = 3m
				preWaitText = Reach specified speed.
				waitingText = Testing highspeed flight
				completionText = Flight completed, you are cleared to land.
			}
		}
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			targetBody = HomeWorld()
			title = Return Home Safely
			hideChildren = true
			completeInSequence = true
		}
	}
}
